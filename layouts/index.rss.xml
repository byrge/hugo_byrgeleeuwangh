{{- printf "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>" | safeHTML }}
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>{{ if eq  .Title  .Site.Title }}{{ .Site.Title }}{{ else }}{{ with .Title }}{{.}} on {{ end }}{{ .Site.Title }}{{ end }}</title>
    <link>{{ .Permalink }}</link>
    <description>Recent content {{ if ne  .Title  .Site.Title }}{{ with .Title }}in {{.}} {{ end }}{{ end }}on {{ .Site.Title }}</description>
    <generator>Hugo -- gohugo.io</generator>{{ with .Site.LanguageCode }}
    <language>{{.}}</language>{{end}}{{ with .Site.Author.email }}
    <managingEditor>{{.}}{{ with $.Site.Author.name }} ({{.}}){{end}}</managingEditor>{{end}}{{ with .Site.Author.email }}
    <webMaster>{{.}}{{ with $.Site.Author.name }} ({{.}}){{end}}</webMaster>{{end}}{{ with .Site.Copyright }}
    <copyright>{{.}}</copyright>{{end}}{{ if not .Date.IsZero }}
    <lastBuildDate>{{ .Date.Format "Mon, 02 Jan 2006 15:04:05 -0700" | safeHTML }}</lastBuildDate>{{ end }}
    {{- with .OutputFormats.Get "RSS" -}}
    {{ printf "<atom:link href=%q rel=\"self\" type=%q />" .Permalink .MediaType | safeHTML }}
    {{- end -}}
    <!-- sponsor of the week -->
    <!-- Get CSV data -->
{{ $url := "/data/sponsors/sponsors.csv" }}
{{ $sep := ";" }}
{{ $sponsors := getCSV $sep $url }}
    
    {{ range $i, $r := $sponsors | first 20 }}
        <!-- not first row because of headers -->
        {{ if ne $i 0 }}

        <!-- define variables -->
        {{ $sponsor_publishDate := index $r 0 }}
        {{ $sponsor_publishDate_time := (time $sponsor_publishDate).Format "02 Jan" }}
        {{ $sponsor_expiryDate := index $r 1 }}
        {{ $sponsor_expiryDate_time := ((time $sponsor_expiryDate).Add (-24 | duration "hour" )).Format "02 Jan" }}
        <!-- if we have an *errors.errorString check the csv file (too many -> ;)  -->
        {{ $sponsor_ISOWeek := int (index $r 2) }}
        {{ $sponsorship_sold := index $r 3 }}
        {{ $sponsor_name := index $r 4 }}
        {{ $sponsor_text := index $r 5 }}
        {{ $sponsor_link := index $r 6 }}
        {{ $sponsor_email := index $r 7 }}
    
        {{ $sponsor_availability_text := replace ( replace $sponsorship_sold "NO" "Available" ) "YES" "Sold" }}

        {{ $default_params := dict "event" "sponsor" "name" $sponsor_name "title" $sponsor_name "publishDate" $sponsor_publishDate "expiryDate" $sponsor_expiryDate "availability" $sponsor_availability_text "ISOWeek" $sponsor_ISOWeek }}

            <!-- show Sponsorship on page -->
            {{- if and ((time $sponsor_publishDate).Before now) ((time $sponsor_expiryDate).After now ) (eq $sponsorship_sold "YES") }}

            <item>
                <title>{{ $sponsor_name }}</title>
                {{ if in (print $sponsor_link) "https"}}<link>{{ $sponsor_link }}?utm_source=byrgeleeuwangh&amp;utm_medium=rss&amp;utm_campaign={{ $sponsor_publishDate_time | lower }}-{{ $sponsor_expiryDate_time | lower }}</link>
                {{else}}<link>{{ $sponsor_link }}</link>{{end}}
                <pubDate>{{ (time $sponsor_publishDate).Format "Mon, 02 Jan 2006" | safeHTML }}</pubDate>
                {{ with $.Site.Params.author.email }}<author>Department of Commerce -- {{.}}{{ with $.Site.Params.author.name }} ({{.}}){{end}}</author>{{end}}
                {{ if in (print $sponsor_link) "https"}}<guid>{{ $sponsor_link }}?utm_source=byrgeleeuwangh&amp;utm_medium=rss&amp;utm_campaign={{ $sponsor_publishDate_time | lower }}-{{ $sponsor_expiryDate_time | lower }}</guid>
                {{else}}<guid>{{ $sponsor_link }}</guid>{{end}}
                <description>{{ $sponsor_text | html }}</description>
            </item>

            {{- end }}
        {{- end }}
    {{- end }}
    <!-- event -->
    <!-- Get CSV data -->
    {{ $url := "/data/events/events.csv" }}
    {{ $sep := "," }}
    {{ $events := getCSV $sep $url }}
    {{ range $i, $r := $events }}
            <!-- not first row because of headers -->
        {{ if ne $i 0 }}
            <!-- define variables -->
            {{ $event_start_date := index $r 1 }}
            {{ $event_start_date := (time $event_start_date) }}
            {{ $event_end_date := index $r 2 }}
            {{ $event_end_date := (time $event_end_date) }}
            {{ $event_name := index $r 0 }}
            {{ $event_location := index $r 3 }}
            {{ $event_url := index $r 4 }}

            <!-- date logic for showing events 1 month before the event -->
            {{ $show_event := $event_start_date.After now }}
            {{ $show_event_start := $event_start_date.AddDate 0 -1 0 }}
            {{ $show_event_publishdate := $show_event_start.Before now }}

            <!-- show on homepage -->
            {{- if and ($show_event) ($show_event_publishdate) }}
            <item>
                <title>{{ $event_name }}</title>
                {{ if in (print $event_url) "https"}}<link>{{ $event_url }}?utm_source=byrgeleeuwangh&amp;utm_medium=rss&amp;utm_campaign={{$show_event_start.Format "January-2006" | lower }}</link>
                {{else}}<link>{{ $event_url }}</link>{{end}}
                <pubDate>{{ $show_event_start.Format "Mon, 02 Jan 2006" | safeHTML }}</pubDate>
                {{ with $.Site.Params.author.email }}<author>{{.}}{{ with $.Site.Params.author.name }} ({{.}}){{end}}</author>{{end}}
                {{ if in (print $event_url) "https"}}<guid>{{ $event_url }}?utm_source=byrgeleeuwangh&amp;utm_medium=rss&amp;utm_campaign={{$show_event_start.Format "January-2006" | lower }}</guid>
                {{else}}<guid>{{ $event_url }}</guid>{{end}}
                <description>{{ $event_name | html }}</description>
            </item>
            {{- end }}
        {{- end }}
    {{- end }}
    <!-- end event -->

    {{ range where (where .Site.Pages.ByDate.Reverse ".Section" "posts") "Kind" "page" }}
      {{ if ne .Draft true}}
      <item>
        <title>{{ .Title }}</title>
        <link>{{ .Permalink }}</link>
        <pubDate>{{ .Date.Format "Mon, 02 Jan 2006 15:04:05 -0700" | safeHTML }}</pubDate>
        {{ with $.Site.Params.author.email }}<author>{{.}}{{ with $.Site.Params.author.name }} ({{.}}){{end}}</author>{{end}}
        <guid>{{ .Permalink }}</guid>
        <description>{{ .Summary | html }}</description>
      </item>
      {{ end }}
    {{ end }}
  </channel>
</rss>